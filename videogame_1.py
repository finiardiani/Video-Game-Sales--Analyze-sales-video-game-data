# -*- coding: utf-8 -*-
"""VideoGame_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qpfDGk1Q3nT-vm8Ys5g176nXzXhZwnh6

# Video Game Sales
1.  Menentukan frekuensi tiap Flatform, Genre dan Publisher merilis atau menjual game tiap tahunya pada tahun 1980 - 2020.

2.  Menentukan tingkat penjualan ataupun tingkat perilisan game di Amerika Utara, Eropa, Jepang, negara lainya serta secara global.

3. Frekuensi Tiap game dirilis tiap tahunya dari tahun 1980 - 2020

5. Frekuensi penjualan game secara global berdasarkan nama game dan tahun.
"""

# upload files ke lembar kerja
from google.colab import files
files.upload()

# Commented out IPython magic to ensure Python compatibility.
# import modul yang dibutuhkan
import pandas as pd
import numpy as np
import seaborn as sns
from datetime import datetime, timedelta
# %matplotlib inline
import matplotlib.pyplot as plt
from mlxtend.frequent_patterns import apriori
from mlxtend.frequent_patterns import association_rules

"""# DATA UNDERSTANDING"""

# read data 
data = pd.read_csv("/content/vgsales.csv")

# tampilkan data
data.head(5)

"""Deskripsi Singkat :
1. Peringkat : Peringkat penjualan keseluruhan

2. Nama : Nama permainan

3. Platform : Platform rilis game (yaitu PC, PS4, dll.)

4. Tahun : Tahun rilis game

5. Genre : Genre permainan

6. Penerbit : Penerbit game

7. NA_Sales : Penjualan di Amerika Utara (dalam jutaan)

8. EU_Sales : Penjualan di Eropa (dalam jutaan)

9. JP_Sales : Penjualan di Jepang (dalam jutaan)

10. Other_Sales : Penjualan di seluruh dunia (dalam jutaan)

11. Global_Sales : Total penjualan di seluruh dunia.
"""

# info tentang data
data.info()

# deskripsi tentang data
data.describe()

# ukuran data
data.shape

"""# DATA VISUALIZATION

###Platform
"""

# karakter Platform
data['Platform'].unique()

# banyak karakter Platform
len(data['Platform'].unique())

# polt Platform
sns.countplot(data['Platform'])

"""### Year"""

# karakter dalam year
data['Year'].unique()

# banyaknya karakter dalam year
len(data['Year'].unique())

# plot year
sns.countplot(data['Year'])

"""### Genre"""

# karakter Genre
data['Genre'].unique()

# banyak karakkter Genre
len(data['Genre'].unique())

# plot Genre
sns.countplot(data['Genre'])

"""### Publisher

"""

# karakter Publisher
len(data['Publisher'].unique())

# plot Publisher
sns.countplot(data['Publisher'])

"""### NA_Sales"""

# jumlah karakter dalam NA_Sales
len(data['NA_Sales'].unique())

# plot NA_Sales
sns.countplot(data['NA_Sales'])

"""### EU_Sales"""

# jumlah karakter EU_Sales
len(data['EU_Sales'].unique())

# plot EU_Sales
sns.countplot(data['EU_Sales'])

"""### JP_Sales"""

# jumlah karakter JP_Sales
len(data['JP_Sales'].unique())

# plot JP_Sales
sns.countplot(data['JP_Sales'])

"""### Other_Sales"""

# karakter Other_Sales
len(data['Other_Sales'].unique())

# plot Other_Sales
sns.countplot(data['Other_Sales'])

"""### Global_Sales"""

# karakter Global_Sales
len(data['Global_Sales'].unique())

# plot Global_Sales
sns.countplot(data['Global_Sales'])

"""# DATA PREPARATION

## HANDLING MISSING VALUE
"""

# cek kolom yang memiliki missing value
data.isnull().sum()[data.isnull().sum()>0]

#cek deskripsi year
data['Year'].describe()

#cek deskripsi year
data['Publisher'].describe()

# isi missing value dengan median
data["Year"] = data["Year"].fillna(data["Year"].median())

# hapus missing value yang masih tersisah
data=data.dropna()

# cek kembali kolom yang memiliki missing value
data.isnull().sum()[data.isnull().sum()>0]

"""## DATA FORMATNG"""

# tampilkan data
data.head(5)

# ubah type data year menjadi integer
data['Year'] = data['Year'].astype(int)

# recek data
data.head(3)

"""# SOLUTION"""

# tampilkan data
data.head(3)

"""### Platform"""

# banyaknya karakter dalam kolom flatform
len(data['Platform'].unique())

# Frequensi tiap flatform merilis game selama tahun 1980 - 2020
frequency=data['Platform'].value_counts()
frequency = frequency.reset_index()
frequency.columns = ['Flatform', 'Frequency']
frequency

# cetak 5 Flatform dengan frequensi penjualan game terbanyak pada tahun 1980 - 2020
print('5 Flatform dengan frequensi penjualan game terbanyak  \n',frequency.head(5))
print('\n\n5 Flatform dengan frequensi penjualan game terkecil  \n',frequency.tail(5))

# Banyaknya game yang terjual di berbagai Flatform selama tahun 1980 - 2020 di Amerika Utara
total1 = data['NA_Sales'].groupby(data['Platform']).agg('sum').sort_values(ascending = False)
total1 = total1.reset_index()
total1.columns = ['Flatform', 'Na_Sales']
total1.head()

# cetak 5 Flatform dengan penjualan terbesar dan terkecil
print('5 Flatform dengan total penjualan game terbesar di Amerika Serikat  \n\n',total1.head(5))
print('\n\n5 Flatform dengan total penjualan game terkecil di Amerika Serikat \n\n',total1.tail(5))

# Banyaknya game yang terjual di berbagai Flatform selama tahun 1980 - 2020 di Erope
total2 = data['EU_Sales'].groupby(data['Platform']).agg('sum').sort_values(ascending = False)
total2 = total2.reset_index()
total2.columns = ['Flatform', 'EU_Sales']
total2.head()

# cetak 5 Flatform dengan penjualan terbesar dan terkecil di Eropa
print('5 Flatform dengan total penjualan game terbesar di Eropa  \n\n',total2.head(5))
print('\n\n5 Flatform dengan total penjualan game terkecil di Eropa \n\n',total2.tail(5))

# Banyaknya game yang terjual di berbagai Flatform selama tahun 1980 - 2020 di Jepang
total3 = data['JP_Sales'].groupby(data['Platform']).agg('sum').sort_values(ascending = False)
total3 = total3.reset_index()
total3.columns = ['Flatform', 'JP_Sales']
total3.head()

# cetak 5 Flatform dengan penjualan terbesar dan terkecil di Jepang
print('5 Flatform dengan total penjualan game terbesar di Jepang  \n\n',total3.head(5))
print('\n\n5 Flatform dengan total penjualan game terkecil di Jepang \n\n',total3.tail(5))

# Banyaknya game yang terjual di berbagai Flatform selama tahun 1980 - 2020 di Negara lain selain Jepang, Eropa dan Amerika Utara
total4 = data['Other_Sales'].groupby(data['Platform']).agg('sum').sort_values(ascending = False)
total4 = total4.reset_index()
total4.columns = ['Flatform', 'Other_Sales']
total4.head()

# cetak 5 Flatform dengan penjualan terbesar dan terkecil di Negara lain selain Jepang, Eropa dan Amerika Utara
print('5 Flatform dengan total penjualan game terbesar di Negara lain selain Jepang, Eropa dan Amerika Utara  \n\n',total4.head(5))
print('\n\n5 Flatform dengan total penjualan game terkecil di Negara lain selain Jepang, Eropa dan Amerika Utara \n\n',total4.tail(5))

# Banyaknya game yang terjual di berbagai Flatform selama tahun 1980 - 2020 Secara Global
total5 = data['Global_Sales'].groupby(data['Platform']).agg('sum').sort_values(ascending = False)
total5 = total5.reset_index()
total5.columns = ['Flatform', 'Global_Sales']
total5.head()

# cetak 5 Flatform dengan penjualan terbesar dan terkecil Secara Global
print('5 Flatform dengan total penjualan game terbesar Secara Global  \n\n',total5.head(5))
print('\n\n5 Flatform dengan total penjualan game terkecil Secara Global\n\n',total5.tail(5))

# satuan tabel frequensi dengan tabel total1
flatform = pd.merge(frequency, total1, on='Flatform', how='inner')

# satuan tabel flatform dengan tabel total2
flatform = pd.merge(flatform, total2, on='Flatform', how='inner')

# satuan tabel flatform dengan tabel total3
flatform = pd.merge(flatform, total3, on='Flatform', how='inner')

# satuan tabel flatform dengan tabel total4
flatform = pd.merge(flatform, total4, on='Flatform', how='inner')

# satuan tabel flatform dengan tabel total5
flatform = pd.merge(flatform, total5, on='Flatform', how='inner')

# tampilkan tabel flatform
flatform

"""1.  Dapat dilihat bahwa dari 31 Platform yang mendistribusikan bergabai game terdapat 1 flatform dengan frekuensi rilis game terbanyak yaitu PS2 sebanyak 2159 kali dalam kurum waktu 40 tahun, serta PS2 berhasil mejual sebanyak 582.17 juta game di Amerika Utara,	338.19 juta game di Eropa,	139.20 juta game di Jepang,	193.00 juta game di negara lainyab dan total terjual diseluruh dunia sebanyak	1252.43 juta game selama tahun 1980 - 2020. 

2.  Flatform dengan frekuesi rilis game tersedikit yaitu GG sebanyak 1 kali rilis dalam tahun 1980 - 2020, dan hanya berhasil menjual sebagnyak 0.04 juta game hanya dinegara Jepang saja.


"""

# save tabel flatform
flatform.to_csv('Flatform.csv')

"""# Genre"""

# banyaknya karakter dalam kolom Genre
len(data['Genre'].unique())

# Frekuensi game yang dirilis dengan berbagai genre dari tahun 1980 - 2020
frequency = data['Genre'].value_counts().sort_values(ascending = False)
frequency = frequency.reset_index()
frequency.columns = ['Genre', 'Frequency']
frequency

# cetak 5 Genre dengan frekuensi rilis terbesar dan terkecil dari tahun 1980 - 2020
print('5 Genre dengan frekuensi rilis terbesar  \n\n',frequency.head(5))
print('\n\n5 Genre dengan frekuensi rilis terkecil\n\n',frequency.tail(5))

# total seluruh game yang terjual dengan berbagai genre dari tahun 1980 - 2020 di Amerika Utara
total1 = data['NA_Sales'].groupby(data['Genre']).agg('sum').sort_values(ascending = False)
total1 = total1.reset_index()
total1.columns = ['Genre', 'NA_Sales']
total1.head()

# cetak 5 Genre dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Amerika Utara
print('5 Genre dengan frekuensi rilis terbesar di Amerika Utara \n\n',total1.head(5))
print('\n\n5 Genre dengan frekuensi rilis terkecil di Amerika Utara\n\n',total1.tail(5))

# total seluruh game yang terjual dengan berbagai genre dari tahun 1980 - 2020 di Eropa
total2 = data['NA_Sales'].groupby(data['Genre']).agg('sum').sort_values(ascending = False)
total2 = total2.reset_index()
total2.columns = ['Genre', 'EU_Sales']
total2.head()

# cetak 5 Genre dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Eropa
print('5 Genre dengan frekuensi rilis terbesar di Eropa \n\n',total2.head(5))
print('\n\n5 Genre dengan frekuensi rilis terkecil di Eropa\n\n',total2.tail(5))

# total seluruh game yang terjual dengan berbagai genre dari tahun 1980 - 2020 di Jepang
total3 = data['JP_Sales'].groupby(data['Genre']).agg('sum').sort_values(ascending = False)
total3 = total3.reset_index()
total3.columns = ['Genre', 'JP_Sales']
total3.head()

# cetak 5 Genre dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Jepang
print('5 Genre dengan frekuensi rilis terbesar di Jepang \n\n',total3.head(5))
print('\n\n5 Genre dengan frekuensi rilis terkecil di Jepang\n\n',total3.tail(5))

# total seluruh game yang terjual dengan berbagai genre dari tahun 1980 - 2020 di Negara selain Jepang, Amerika Utara dan Eropa
total4 = data['Other_Sales'].groupby(data['Genre']).agg('sum').sort_values(ascending = False)
total4 = total4.reset_index()
total4.columns = ['Genre', 'Other_Sales']
total4.head()

# cetak 5 Genre dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Negara selain Jepang, Amerika Utara dan Eropa
print('5 Genre dengan frekuensi rilis terbesar di negara lainya \n\n',total4.head(5))
print('\n\n5 Genre dengan frekuensi rilis terkecil di negara lainya\n\n',total4.tail(5))

# total seluruh game yang terjual dengan berbagai genre dari tahun 1980 - 2020 Secara keseluruhan
total5 = data['Global_Sales'].groupby(data['Genre']).agg('sum').sort_values(ascending = False)
total5 = total5.reset_index()
total5.columns = ['Genre', 'Global_Sales']
total5.head()

# cetak 5 Genre dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 Secara global
print('5 Genre dengan frekuensi rilis terbesar secara global \n\n',total5.head(5))
print('\n\n5 Genre dengan frekuensi rilis terkecil secara global\n\n',total5.tail(5))

# satukan tabel frequensi dengan tabel total1
genre = pd.merge(frequency, total1, on='Genre', how='inner')

# satukan tabel flatform dengan tabel total2
genre = pd.merge(genre, total2, on='Genre', how='inner')

# satukan tabel flatform dengan tabel total3
genre = pd.merge(genre, total3, on='Genre', how='inner')

# satukan tabel flatform dengan tabel total4
genre = pd.merge(genre, total4, on='Genre', how='inner')

# satukan tabel flatform dengan tabel total5
genre = pd.merge(genre, total5, on='Genre', how='inner')

# tampilkan tabel flatform
genre

# save genre
genre.to_csv('Genre.csv')

"""1.  Dapat dilihat bahwa dari 12 genre game yang dirilis terdapat 1 genre dengan frekuensi rilis genre game terbanyak yaitu Action sebanyak 3309 kali dalam kurum waktu 40 tahun, serta genre Action berhasil terjual sebanyak 877.54 juta game di Amerika Utara,	877.54 juta game di Eropa,	159.49 juta game di Jepang,	187.35 juta game di negara lainyab dan total terjual diseluruh dunia sebanyak	1750.33 juta game selama tahun 1980 - 2020. 

2.  Genre dengan frekuesi rilis game tersedikit yaitu Puzzel sebanyak 581 kali rilis dalam tahun 1980 - 2020, dan hanya berhasil menjual sebanyak 123.78 juta game di Amerika Utara,	123.78 juta game di Eropa,	57.31 juta game di Jepang,	12.55 juta game di negara lainya dan	244.94 juta game secara global.

# Publisher
"""

# banyak karakter didalam kolom Publisher
len(data['Publisher'].unique())

# Frekuensi game yang dirilis dari berbagai Publisher dari tahun 1980 - 2020
frequency = data['Publisher'].value_counts().sort_values(ascending = False)
frequency = frequency.reset_index()
frequency.columns = ['Publisher', 'Frequency']
frequency

# cetak 5 Publisher dengan frekuensi rilis game terbesar dan terkecil dari tahun 1980 - 2020
print('5 Publisher dengan frekuensi rilis terbesar  \n\n',frequency.head(5))
print('\n\n5 Publisher dengan frekuensi rilis terkecil\n\n',frequency.tail(5))

# total seluruh game yang terjual dari bebbagai Publisher dari tahun 1980 - 2020 di Amerika Utara
total1 = data['NA_Sales'].groupby(data['Publisher']).agg('sum').sort_values(ascending = False)
total1 = total1.reset_index()
total1.columns = ['Publisher', 'NA_Sales']
total1.head()

# cetak 5 Publisher dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Amerika Utara
print('5 Publisher dengan frekuensi rilis terbesar di Amerika Utara \n\n',total1.head(5))
print('\n\n5 Publisher dengan frekuensi rilis terkecil di Amerika Utara\n\n',total1.tail(5))

# total seluruh game yang terjual dari berbagai Publisher dari tahun 1980 - 2020 di Eropa
total2 = data['EU_Sales'].groupby(data['Publisher']).agg('sum').sort_values(ascending = False)
total2 = total2.reset_index()
total2.columns = ['Publisher', 'EU_Sales']
total2.head()

# cetak 5 Publisher dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Eropa
print('5 Publisher dengan frekuensi rilis terbesar di Eropa \n\n',total2.head(5))
print('\n\n5 Publisher dengan frekuensi rilis terkecil di Eropa\n\n',total2.tail(5))

# total seluruh game yang terjual dari berbagai Publisher dari tahun 1980 - 2020 di Jepang
total3 = data['JP_Sales'].groupby(data['Publisher']).agg('sum').sort_values(ascending = False)
total3 = total3.reset_index()
total3.columns = ['Publisher', 'JP_Sales']
total3.head()

# cetak 5 Publisher dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Jepang
print('5 Publisher dengan frekuensi rilis terbesar di Eropa \n\n',total3.head(5))
print('\n\n5 Publisher dengan frekuensi rilis terkecil di Eropa\n\n',total3.tail(5))

# total seluruh game yang terjual dari berbagai Publisher dari tahun 1980 - 2020 di Jepang
total4 = data['Other_Sales'].groupby(data['Publisher']).agg('sum').sort_values(ascending = False)
total4 = total4.reset_index()
total4.columns = ['Publisher', 'Other_Sales']
total4.head()

# cetak 5 Publisher dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 di Negara lain selain Jepang, Amerika Utara dan Eropa
print('5 Publisher dengan frekuensi rilis terbesar di Negara lainya \n\n',total4.head(5))
print('\n\n5 Publisher dengan frekuensi rilis terkecil di Negara lainya\n\n',total4.tail(5))

# total seluruh game yang terjual dari berbagai Publisher dari tahun 1980 - 2020 secara global
total5 = data['Global_Sales'].groupby(data['Publisher']).agg('sum').sort_values(ascending = False)
total5 = total5.reset_index()
total5.columns = ['Publisher', 'Global_Sales']
total5.head()

# cetak 5 Publisher dengan jumlah penjualan terbesar dan terkecil dari tahun 1980 - 2020 secara Global
print('5 Publisher dengan frekuensi rilis terbesar secara Global \n\n',total5.head(5))
print('\n\n5 Publisher dengan frekuensi rilis terkecil secara Global\n\n',total5.tail(5))

# satukan tabel frequensi dengan tabel total1
publisher = pd.merge(frequency, total1, on='Publisher', how='inner')

# satukan tabel flatform dengan tabel total2
publisher = pd.merge(publisher, total2, on='Publisher', how='inner')

# satukan tabel flatform dengan tabel total3
publisher = pd.merge(publisher, total3, on='Publisher', how='inner')

# satukan tabel flatform dengan tabel total4
publisher = pd.merge(publisher, total4, on='Publisher', how='inner')

# satukan tabel flatform dengan tabel total5
publisher = pd.merge(publisher, total5, on='Publisher', how='inner')

# tampilkan tabel flatform
publisher

# save tabel publisher
publisher.to_csv('Publisher.csv')

"""# Frekuensi tiap game dirilis tiap tahunya """

# karakter yang terdapat dikolom Year
data['Year'].unique()

# game yang dirilis mulai tahun 1980 - 2020
game = data['Year'].groupby(data['Name']).agg('value_counts').sort_values(ascending=True).unstack()

# isi mising value pada game dengan nol
game = game.fillna(0)
game

# buat kolom baru yang berisi total tiap nama game yang dirilis tiap tahunya
game['Total'] = data['Name'].value_counts()
game

# save tabel game
game.to_csv('Frekuensi_game.csv')

"""#Frekuensi penjualan game secara global berdasarkan nama game dan tahun rilis"""

# Frekuensi penjualan game secara global berdasarkan tahun dan nama game yang dirilis
Globalgame_sales = data.groupby(['Name', 'Year']).agg({'Global_Sales':'sum'}).unstack()

# isi missing value pada tabel game_sales
Globalgame_sales = Globalgame_sales.fillna(0)
Globalgame_sales

# buat kolom baru yang berisi total dari penjualan tiap game mulai tahun 1980 - 2020
total = data['Global_Sales'].groupby(data['Name']).agg(sum)
total = total.reset_index()
total.columns = ['Name', 'Global_Sales']
total

# gabungkan tabel Globalgame_sales dan total
global_sales = pd.merge(Globalgame_sales, total, on='Name', how='inner')
global_sales.columns = ['Name', '1980',	'1981',	'1982',	'1983',	'1984', '1985',	'1986',	'1987',	'1988',	'1989',	'1990',	'1991',	'1992',	'1993',
                            '1994',	'1995',	'1996',	'1997',	'1998',	'1999',	'2000',	'2001',	'2002',	'2003',	'2004',	'2005',	'2006',	'2007',	'2008',	
                            '2009',	'2010',	'2011',	'2012',	'2013',	'2014',	'2015',	'2016',	'2017',	'2020', 'Total' ]

# tampilkan tabel global_sales
global_sales

# save Globalgame_sales
global_sales.to_csv('Globalgame_sales.csv')